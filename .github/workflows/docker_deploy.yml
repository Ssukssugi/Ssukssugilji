name: CI/CD Docker Deploy

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t my-spring-app:latest .

      - name: Save Docker image as tar
        run: docker save my-spring-app:latest -o my-spring-app.tar

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Send Docker image to server
        run: |
          scp -o StrictHostKeyChecking=no my-spring-app.tar ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/tmp/

      - name: Send docker-compose.yml to server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/deploy/my-spring-app/

      - name: Deploy on server with zero-downtime
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} bash -s << EOF
            cd ~/deploy/my-spring-app
            docker load -i /tmp/my-spring-app.tar

            ACTIVE=\$(docker ps --format '{{.Names}}' | grep spring)

            if [[ "\$ACTIVE" == "spring-blue" ]]; then
              docker-compose up -d spring-green
              sleep 15
              curl -f http://localhost:8082/actuator/health || exit 1

              docker stop spring-blue && docker rm spring-blue
              sudo sed -i 's/8081/8082/' /etc/nginx/conf.d/spring.conf
              sudo nginx -s reload
            else
              docker-compose up -d spring-blue
              sleep 15
              curl -f http://localhost:8081/actuator/health || exit 1

              docker stop spring-green && docker rm spring-green
              sudo sed -i 's/8082/8081/' /etc/nginx/conf.d/spring.conf
              sudo nginx -s reload
            fi
